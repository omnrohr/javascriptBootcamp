{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,OAAO,GAAG,iBAAkB;IAChC,IAAI;QACF,MAAM,GAAG,GAAG,MAAM,KAAK,CACrB,2EAA2E,CAC5E,AAAC;QACF,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,AAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAE9D,IAAI,EAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,IAAI,AAAC;QAC3B,MAAM,GAAG;YACP,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,WAAW,EAAE,MAAM,CAAC,YAAY;SACjC,CAAC;QACF,MAAM,IAAI,GAAG,CAAC;;0BAEQ,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAC1C,MAAM,CAAC,KAAK,CACb;;wBAEmB,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;6EASsC,EACzD,MAAM,CAAC,WAAW,CACnB;;;;;;;4EAOyD,EACxD,MAAM,CAAC,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAgCC,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,CAAC,CAAA,GAAG,GAAI;YACV,OAAO,CAAC;;;;0DAI0B,EAAE,GAAG,CAAC,QAAQ,CAAC;;yDAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;8BACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;+BAEjB,CAAC,CAAC;SACV,CAAC,CACD,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;;kDAQkB,EAC9B,MAAM,CAAC,SAAS,CACjB;;;;;wBAKK,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;EASzC,CAAC,AAAC;QACA,+DAA+D;QAC/D,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;QAC/B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACvD,sDAAsD;QACtD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;KACf,CAAC,OAAO,GAAG,EAAE;QACZ,KAAK,CAAC,GAAG,CAAC,CAAC;KACZ;CACF,AAAC;AAEF,MAAM,YAAY,GAAG,SAAU,MAAM,EAAE,EAAE,AAAC;AAC1C,OAAO,EAAE,CAAC","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst getData = async function () {\n  try {\n    const res = await fetch(\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcc40'\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} ${res.status}`);\n\n    let { recipe } = data.data;\n    recipe = {\n      ID: recipe.id,\n      image: recipe.image_url,\n      ingredients: recipe.ingredients,\n      publisher: recipe.publisher,\n      servings: recipe.servings,\n      sourceUrl: recipe.source_url,\n      title: recipe.title,\n      cookingTime: recipe.cooking_time,\n    };\n    const html = `\n              <figure class=\"recipe__fig\">\n                <img src=\"${recipe.image}\" alt=\"${\n      recipe.title\n    }\" class=\"recipe__img\" />\n                <h1 class=\"recipe__title\">\n                  <span>${recipe.title}</span>\n                </h1>\n              </figure>\n\n              <div class=\"recipe__details\">\n                <div class=\"recipe__info\">\n                  <svg class=\"recipe__info-icon\">\n                    <use href=\"src/img/icons.svg#icon-clock\"></use>\n                  </svg>\n                  <span class=\"recipe__info-data recipe__info-data--minutes\">${\n                    recipe.cookingTime\n                  }</span>\n                  <span class=\"recipe__info-text\">minutes</span>\n                </div>\n                <div class=\"recipe__info\">\n                  <svg class=\"recipe__info-icon\">\n                    <use href=\"src/img/icons.svg#icon-users\"></use>\n                  </svg>\n                  <span class=\"recipe__info-data recipe__info-data--people\">${\n                    recipe.servings\n                  }</span>\n                  <span class=\"recipe__info-text\">servings</span>\n\n                  <div class=\"recipe__info-buttons\">\n                    <button class=\"btn--tiny btn--increase-servings\">\n                      <svg>\n                        <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                      </svg>\n                    </button>\n                    <button class=\"btn--tiny btn--increase-servings\">\n                      <svg>\n                        <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n\n                <div class=\"recipe__user-generated\">\n                  <svg>\n                    <use href=\"src/img/icons.svg#icon-user\"></use>\n                  </svg>\n                </div>\n                <button class=\"btn--round\">\n                  <svg class=\"\">\n                    <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n                  </svg>\n                </button>\n              </div>\n\n              <div class=\"recipe__ingredients\">\n                <h2 class=\"heading--2\">Recipe ingredients</h2>\n                <ul class=\"recipe__ingredient-list\">\n                    ${recipe.ingredients\n                      .map(ing => {\n                        return `<li class=\"recipe__ingredient\">\n                            <svg class=\"recipe__icon\">\n                              <use href=\"src/img/icons.svg#icon-check\"></use>\n                            </svg>\n                            <div class=\"recipe__quantity\">${ing.quantity}</div>\n                            <div class=\"recipe__description\">\n                              <span class=\"recipe__unit\">${ing.unit}</span>\n                              ${ing.description}\n                            </div>\n                          </li>`;\n                      })\n                      .join('')}\n                </ul>\n              </div>\n\n              <div class=\"recipe__directions\">\n                <h2 class=\"heading--2\">How to cook it</h2>\n                <p class=\"recipe__directions-text\">\n                  This recipe was carefully designed and tested by\n                  <span class=\"recipe__publisher\">${\n                    recipe.publisher\n                  }</span>. Please check out\n                  directions at their website.\n                </p>\n                <a\n                  class=\"btn--small recipe__btn\"\n                  href=\"${recipe.sourceUrl}\"\n                  target=\"_blank\"\n                >\n                  <span>Directions</span>\n                  <svg class=\"search__icon\">\n                    <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n                  </svg>\n                </a>\n              </div>\n  `;\n    // better to remove all inner html than delete the div it self.\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', html);\n    // recipeContainer.querySelector('.message').remove();\n    console.log('recipe: ', recipe);\n    return recipe;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nconst renderRecipe = function (recipe) {};\ngetData();\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}